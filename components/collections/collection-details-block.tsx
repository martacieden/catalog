"use client"

import * as React from "react"
import { Collection, CollectionItem } from "@/types/collection"
import { FilterRule } from "@/types/rule"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Separator } from "@/components/ui/separator"
import { InsightCard, InsightData } from "@/components/ui/insight-card"
import { FilterChipsList, FilterChipData } from "@/components/ui/filter-chip"
import { CollectionDetailsSection } from "@/components/ui/collapsible-section"
import {
  Sparkles,
  Filter,
  Info,
  AlertCircle,
  CheckCircle,
  TrendingUp,
  Bot,
  ChevronDown,
  ChevronUp,
  Wrench,
  Home,
  BarChart3,
  DollarSign,
  Calendar,
  ClipboardList,
  ExternalLink,
  Users,
  FileText,
  MessageSquare,
} from "lucide-react"

interface CollectionDetailsBlockProps {
  collection: Collection
  items: CollectionItem[]
  onOpenAIAssistant?: () => void
  onInsightClick?: (insightId: string, aiDetails: any) => void
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–∞–≤–∏–ª —É —á–∏—Ç–∞–±–µ–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥
const formatRule = (rule: FilterRule): string => {
  const { field, operator, value } = rule
  
  const fieldLabels: Record<string, string> = {
    'name': 'Name',
    'category': 'Category',
    'status': 'Status',
    'type': 'Type',
    'location': 'Location',
    'value': 'Value',
    'pinned': 'Pinned',
    'createdBy': 'Created by',
    'createdOn': 'Created on',
    'sharedWith': 'Shared with'
  }
  
  const operatorLabels: Record<string, string> = {
    'equals': 'is',
    'not_equals': 'is not',
    'contains': 'contains',
    'not_contains': 'does not contain',
    'starts_with': 'starts with',
    'ends_with': 'ends with',
    'is_empty': 'is empty',
    'is_not_empty': 'is not empty',
    'greater_than': 'is greater than',
    'less_than': 'is less than'
  }
  
  const fieldLabel = fieldLabels[field] || field
  const operatorLabel = operatorLabels[operator] || operator
  
  return `${fieldLabel} ${operatorLabel} "${value}"`
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó AI Summary
const generateAISummary = (collection: Collection, items: CollectionItem[]) => {
  const insights = []
  
  // –ê–Ω–∞–ª—ñ–∑ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ items
  if (items.length === 0) {
    insights.push({
      type: 'warning',
      icon: AlertCircle,
      title: 'Empty Collection',
      message: 'This collection has no items yet. Consider adding items or checking your filter rules.',
      actionType: 'ai_assistant',
      data: { action: 'add_items' }
    })
  } else if (items.length < 3) {
    insights.push({
      type: 'info',
      icon: Info,
      title: 'Small Collection',
      message: `Only ${items.length} items in this collection. You might want to expand it.`,
      actionType: 'ai_assistant',
      data: { action: 'expand_collection' }
    })
  } else if (items.length > 20) {
    insights.push({
      type: 'success',
      icon: CheckCircle,
      title: 'Large Collection',
      message: `Great! This collection has ${items.length} items and is well-organized.`,
      actionType: 'none'
    })
  }
  
  // –ê–Ω–∞–ª—ñ–∑ —Ç–∏–ø—ñ–≤ items
  const categories = items.reduce((acc, item) => {
    acc[item.category] = (acc[item.category] || 0) + 1
    return acc
  }, {} as Record<string, number>)
  
  const categoryCount = Object.keys(categories).length
  if (categoryCount > 1) {
    insights.push({
      type: 'info',
      icon: TrendingUp,
      title: 'Mixed Categories',
      message: `Collection spans ${categoryCount} different categories: ${Object.keys(categories).join(', ')}.`,
      actionType: 'filter',
      data: { categories: Object.keys(categories) }
    })
  } else if (categoryCount === 1) {
    const category = Object.keys(categories)[0]
    insights.push({
      type: 'success',
      icon: CheckCircle,
      title: 'Focused Collection',
      message: `All items are in the ${category} category - great focus!`,
      actionType: 'filter',
      data: { category }
    })
  }
  
  // –ê–Ω–∞–ª—ñ–∑ —Å—Ç–∞—Ç—É—Å—ñ–≤
  const statuses = items.reduce((acc, item) => {
    if (item.status) {
      acc[item.status] = (acc[item.status] || 0) + 1
    }
    return acc
  }, {} as Record<string, number>)
  
  const unavailableItems = Object.entries(statuses)
    .filter(([status]) => ['Maintenance', 'Unavailable', 'Expired'].includes(status))
    .reduce((sum, [, count]) => sum + count, 0)
  
  if (unavailableItems > 0) {
    const problemItems = items.filter(item => item.status && ['Maintenance', 'Unavailable', 'Expired'].includes(item.status))
    insights.push({
      type: 'warning',
      icon: AlertCircle,
      title: 'Items Need Attention',
      message: `${unavailableItems} items have status issues that may need attention.`,
      actionType: 'filter',
      data: { 
        status: ['Maintenance', 'Unavailable', 'Expired'],
        items: problemItems.map(item => item.id)
      }
    })
  }
  
  // –ê–Ω–∞–ª—ñ–∑ –ø—Ä–∞–≤–∏–ª
  if (collection.filters && collection.filters.length > 0) {
    insights.push({
      type: 'success',
      icon: CheckCircle,
      title: 'Smart Collection',
      message: `Collection uses ${collection.filters.length} filter rule${collection.filters.length > 1 ? 's' : ''} for automatic organization.`,
      actionType: 'none'
    })
  } else if (items.length > 0) {
    insights.push({
      type: 'info',
      icon: Info,
      title: 'Manual Collection',
      message: 'This is a manual collection. Consider adding filter rules for automatic updates.',
      actionType: 'ai_assistant',
      data: { action: 'setup_rules' }
    })
  }
  
  // –ê–Ω–∞–ª—ñ–∑ –¥–∞—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è
  const now = new Date()
  const recentItems = items.filter(item => {
    if (!item.createdAt) return false
    const createdDate = new Date(item.createdAt)
    const daysDiff = (now.getTime() - createdDate.getTime()) / (1000 * 60 * 60 * 24)
    return daysDiff <= 7
  }).length
  
  if (recentItems > 0) {
    const recentItemsList = items.filter(item => {
      if (!item.createdAt) return false
      const createdDate = new Date(item.createdAt)
      const daysDiff = (now.getTime() - createdDate.getTime()) / (1000 * 60 * 60 * 24)
      return daysDiff <= 7
    })
    
    insights.push({
      type: 'info',
      icon: TrendingUp,
      title: 'Recent Activity',
      message: `${recentItems} items were added in the last 7 days.`,
      actionType: 'filter',
      data: { 
        filter: 'recent',
        items: recentItemsList.map(item => item.id)
      }
    })
  }
  
  return insights
}

export function CollectionDetailsBlock({ 
  collection, 
  items, 
  onOpenAIAssistant, 
  onInsightClick
}: CollectionDetailsBlockProps) {
  const [isCollapsed, setIsCollapsed] = React.useState(false)
  
  // –°–ü–†–û–©–ï–ù–Ü AI INSIGHTS - —Ç—ñ–ª—å–∫–∏ 3 –Ω–∞–π–≤–∞–∂–ª–∏–≤—ñ—à—ñ (—Ä–µ–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è 9 items)
  const staticInsights: InsightData[] = [
    {
      id: 'maintenance-alert',
      title: '‚ö†Ô∏è Maintenance Alert',
      message: '4 properties require HVAC filter replacement within 30 days',
      type: 'warning',
      icon: '‚ö†Ô∏è',
      aiDetails: {
        title: '‚ö†Ô∏è Maintenance Alert: HVAC Filter Replacement Needed',
        description: '–Ø –≤–∏—è–≤–∏–≤, —â–æ 4 –≤–∞—à—ñ –æ–±\'—î–∫—Ç–∏ –ø–æ—Ç—Ä–µ–±—É—é—Ç—å –∑–∞–º—ñ–Ω–∏ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ HVAC –ø—Ä–æ—Ç—è–≥–æ–º –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö 30 –¥–Ω—ñ–≤. –°–≤–æ—î—á–∞—Å–Ω–∞ –∑–∞–º—ñ–Ω–∞ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ —î –∫—Ä–∏—Ç–∏—á–Ω–æ –≤–∞–∂–ª–∏–≤–æ—é –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ —è–∫–æ—Å—Ç—ñ –ø–æ–≤—ñ—Ç—Ä—è, –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ —Å–∏—Å—Ç–µ–º–∏ —Ç–∞ –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –¥–æ—Ä–æ–≥–∏–º –ø–æ–ª–æ–º–∫–∞–º.',
        items: [
          'Property A: –û—Å—Ç–∞–Ω–Ω—î –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è: 15.03.2023. –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞ –∑–∞–º—ñ–Ω–∞: –¥–æ 20.07.2024.',
          'Property B: –û—Å—Ç–∞–Ω–Ω—î –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è: 01.04.2023. –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞ –∑–∞–º—ñ–Ω–∞: –¥–æ 05.08.2024.',
          'Property C: –û—Å—Ç–∞–Ω–Ω—î –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è: 10.04.2023. –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞ –∑–∞–º—ñ–Ω–∞: –¥–æ 15.08.2024.',
          'Property D: –û—Å—Ç–∞–Ω–Ω—î –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è: 25.04.2023. –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞ –∑–∞–º—ñ–Ω–∞: –¥–æ 30.08.2024.'
        ],
        recommendations: [
          '–ó–∞–ø–ª–∞–Ω—É–≤–∞—Ç–∏ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è: –ó–≤\'—è–∂—ñ—Ç—å—Å—è –∑ –≤–∞—à–∏–º–∏ –ø—ñ–¥—Ä—è–¥–Ω–∏–∫–∞–º–∏ –¥–ª—è –ø–ª–∞–Ω—É–≤–∞–Ω–Ω—è –∑–∞–º—ñ–Ω–∏ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤.',
          '–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∑–∞–ø–∞—Å–∏ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤: –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ —É –≤–∞—Å —î –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —Ç–∏–ø–∏ —Ç–∞ —Ä–æ–∑–º—ñ—Ä–∏ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤.',
          '–û—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó: –Ø–∫—â–æ –≤–∏ —à—É–∫–∞—î—Ç–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∞ –ø–æ—Å–ª—É–≥, —è –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∑–Ω–∞–π—Ç–∏ –∫–≤–∞–ª—ñ—Ñ—ñ–∫–æ–≤–∞–Ω–∏—Ö –ø—ñ–¥—Ä—è–¥–Ω–∏–∫—ñ–≤ —É –≤–∞—à–æ–º—É —Ä–µ–≥—ñ–æ–Ω—ñ.'
        ],
        actions: [
          '–°—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –æ–±\'—î–∫—Ç–∞ –≤ —Å–∏—Å—Ç–µ–º—ñ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è–º–∏',
          '–ù–∞–¥–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∏—Ö –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫—ñ–≤ HVAC –ø–æ—Å–ª—É–≥',
          '–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∑–≤—ñ—Ç –ø—Ä–æ —ñ—Å—Ç–æ—Ä—ñ—é –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è —Ü–∏—Ö –æ–±\'—î–∫—Ç—ñ–≤'
        ]
      }
    },
    {
      id: 'insurance-gap',
      title: 'üõ°Ô∏è Insurance Gap',
      message: '3 properties missing flood insurance coverage',
      type: 'warning',
      icon: 'üõ°Ô∏è',
      aiDetails: {
        title: 'üõ°Ô∏è Insurance Gap: –í—ñ–¥—Å—É—Ç–Ω—î –ø–æ–∫—Ä–∏—Ç—Ç—è –≤—ñ–¥ –ø–æ–≤–µ–Ω–µ–π',
        description: '–Ø –≤–∏—è–≤–∏–≤, —â–æ 3 –≤–∞—à—ñ –æ–±\'—î–∫—Ç–∏ –Ω–µ –º–∞—é—Ç—å –ø–æ–∫—Ä–∏—Ç—Ç—è –≤—ñ–¥ –ø–æ–≤–µ–Ω–µ–π. –¶–µ —Å—Ç–≤–æ—Ä—é—î –∑–Ω–∞—á–Ω–∏–π —Ä–∏–∑–∏–∫, –æ—Å–æ–±–ª–∏–≤–æ —è–∫—â–æ —Ü—ñ –æ–±\'—î–∫—Ç–∏ —Ä–æ–∑—Ç–∞—à–æ–≤–∞–Ω—ñ –≤ –∑–æ–Ω–∞—Ö, —Å—Ö–∏–ª—å–Ω–∏—Ö –¥–æ –∑–∞—Ç–æ–ø–ª–µ–Ω—å.',
        items: [
          'Property X: –†–æ–∑—Ç–∞—à–æ–≤–∞–Ω–∏–π —É –∑–æ–Ω—ñ –ø–æ–º—ñ—Ä–Ω–æ–≥–æ —Ä–∏–∑–∏–∫—É –ø–æ–≤–µ–Ω–µ–π.',
          'Property Y: –†–æ–∑—Ç–∞—à–æ–≤–∞–Ω–∏–π —É –∑–æ–Ω—ñ –≤–∏—Å–æ–∫–æ–≥–æ —Ä–∏–∑–∏–∫—É –ø–æ–≤–µ–Ω–µ–π.',
          'Property Z: –†–æ–∑—Ç–∞—à–æ–≤–∞–Ω–∏–π —É –∑–æ–Ω—ñ –Ω–∏–∑—å–∫–æ–≥–æ —Ä–∏–∑–∏–∫—É, –∞–ª–µ –∑ –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∏–º–∏ –∑–º—ñ–Ω–∞–º–∏ –∫–ª—ñ–º–∞—Ç—É.'
        ],
        recommendations: [
          '–û—Ü—ñ–Ω–∏—Ç–∏ —Ä–∏–∑–∏–∫–∏: –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–æ—Ç–æ—á–Ω—ñ –∫–∞—Ä—Ç–∏ –∑–æ–Ω –∑–∞—Ç–æ–ø–ª–µ–Ω–Ω—è –¥–ª—è —Ü–∏—Ö –æ–±\'—î–∫—Ç—ñ–≤.',
          '–ó–≤\'—è–∑–∞—Ç–∏—Å—è –∑—ñ —Å—Ç—Ä–∞—Ö–æ–≤–∏–º–∏ –∞–≥–µ–Ω—Ç–∞–º–∏: –û—Ç—Ä–∏–º–∞–π—Ç–µ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó —â–æ–¥–æ —Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –≤—ñ–¥ –ø–æ–≤–µ–Ω–µ–π.',
          '–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —ñ—Å–Ω—É—é—á—ñ –ø–æ–ª—ñ—Å–∏: –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ —ñ–Ω—à—ñ –≤–∞—à—ñ –æ–±\'—î–∫—Ç–∏ –º–∞—é—Ç—å –∞–¥–µ–∫–≤–∞—Ç–Ω–µ –ø–æ–∫—Ä–∏—Ç—Ç—è.'
        ],
        actions: [
          '–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∑–≤—ñ—Ç –ø—Ä–æ –≥–µ–æ–≥—Ä–∞—Ñ—ñ—á–Ω–µ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –æ–±\'—î–∫—Ç—ñ–≤ —Ç–∞ —ó—Ö–Ω—ñ –∑–æ–Ω–∏ —Ä–∏–∑–∏–∫—É –ø–æ–≤–µ–Ω–µ–π',
          '–ù–∞–¥–∞—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–∏—Ö —Å—Ç—Ä–∞—Ö–æ–≤–∏—Ö –±—Ä–æ–∫–µ—Ä—ñ–≤, —â–æ —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—é—Ç—å—Å—è –Ω–∞ –∫–æ–º–µ—Ä—Ü—ñ–π–Ω—ñ–π –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ',
          '–ü–æ—Ä—ñ–≤–Ω—è—Ç–∏ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –≤—ñ–¥ —Ä—ñ–∑–Ω–∏—Ö —Å—Ç—Ä–∞—Ö–æ–≤–∏—Ö –∫–æ–º–ø–∞–Ω—ñ–π'
        ]
      }
    },
    {
      id: 'cost-optimization',
      title: 'üìà Cost Optimization',
      message: 'Aviation maintenance contracts up for renewal - potential $200K savings',
      type: 'info',
      icon: 'üìà',
      aiDetails: {
        title: 'üìà Cost Optimization: –ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å –µ–∫–æ–Ω–æ–º—ñ—ó –Ω–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞—Ö',
        description: '–Ø –≤–∏—è–≤–∏–≤, —â–æ –≤–∞—à—ñ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∏ –Ω–∞ —Ç–µ—Ö–Ω—ñ—á–Ω–µ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è –∞–≤—ñ–∞—Ü—ñ—ó –ø—ñ–¥–ª—è–≥–∞—é—Ç—å –ø–æ–Ω–æ–≤–ª–µ–Ω–Ω—é, —ñ —î –ø–æ—Ç–µ–Ω—Ü—ñ–∞–ª –¥–ª—è –µ–∫–æ–Ω–æ–º—ñ—ó –¥–æ $200 000. –¶–µ —á—É–¥–æ–≤–∞ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —É–º–æ–≤–∏ —Ç–∞ –æ–ø—Ç–∏–º—ñ–∑—É–≤–∞—Ç–∏ –≤–∏—Ç—Ä–∞—Ç–∏.',
        items: [
          '–ö–æ–Ω—Ç—Ä–∞–∫—Ç–∏: –ö—ñ–ª—å–∫–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ñ–≤ –Ω–∞ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è –∞–≤—ñ–∞—Ü—ñ–π–Ω–æ–≥–æ –ø–∞—Ä–∫—É, —Ç–µ—Ä–º—ñ–Ω –¥—ñ—ó —è–∫–∏—Ö –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è –ø—Ä–æ—Ç—è–≥–æ–º –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö 90 –¥–Ω—ñ–≤.',
          '–ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∞ –µ–∫–æ–Ω–æ–º—ñ—è: –ê–Ω–∞–ª—ñ–∑ —Ä–∏–Ω–∫—É —Ç–∞ —ñ—Å—Ç–æ—Ä–∏—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö –ø–æ–∫–∞–∑—É—î, —â–æ –º–æ–∂–Ω–∞ –¥–æ—Å—è–≥—Ç–∏ –µ–∫–æ–Ω–æ–º—ñ—ó –¥–æ $200 000 —à–ª—è—Ö–æ–º –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ñ–≤ –∞–±–æ –∑–º—ñ–Ω–∏ –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∞.'
        ],
        recommendations: [
          '–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ø–æ—Ç–æ—á–Ω—ñ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∏: –î–µ—Ç–∞–ª—å–Ω–æ –≤–∏–≤—á—ñ—Ç—å —É–º–æ–≤–∏, –æ–±—Å—è–≥–∏ –ø–æ—Å–ª—É–≥ —Ç–∞ —Ü—ñ–Ω–∏.',
          '–ó–∞–ø—Ä–æ—Å–∏—Ç–∏ –Ω–æ–≤—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó: –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ —ñ–Ω—à–∏—Ö –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫—ñ–≤ –ø–æ—Å–ª—É–≥ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–∏—Ö –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π.',
          '–ü—Ä–æ–≤–µ—Å—Ç–∏ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–∏: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –æ—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ñ–≤ –∑ –ø–æ—Ç–æ—á–Ω–∏–º–∏ –∞–±–æ –Ω–æ–≤–∏–º–∏ –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∞–º–∏.'
        ],
        actions: [
          '–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø–æ—Ä—ñ–≤–Ω—è–ª—å–Ω–∏–π –∑–≤—ñ—Ç –ø–æ —É–º–æ–≤–∞—Ö –ø–æ—Ç–æ—á–Ω–∏—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ñ–≤ —Ç–∞ —Ä–∏–Ω–∫–æ–≤–∏—Ö –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π',
          '–ù–∞–¥–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∏—Ö –Ω–æ–≤–∏—Ö –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫—ñ–≤ –ø–æ—Å–ª—É–≥ –∑ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è –∞–≤—ñ–∞—Ü—ñ—ó',
          '–ó–∞–ø–ª–∞–Ω—É–≤–∞—Ç–∏ –∑—É—Å—Ç—Ä—ñ—á—ñ –∑ –∫–ª—é—á–æ–≤–∏–º–∏ –∑–∞—Ü—ñ–∫–∞–≤–ª–µ–Ω–∏–º–∏ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏ –¥–ª—è –æ–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ñ–≤'
        ]
      }
    }
  ]
  
  // –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ —Ñ—ñ–ª—å—Ç—Ä–∏ –≤ —Ñ–æ—Ä–º–∞—Ç FilterChipData
  const filterChips: FilterChipData[] = collection.filters?.map((filter, index) => ({
    id: `filter-${index}`,
    field: filter.field,
    operator: filter.operator,
    value: filter.value,
    displayText: `${filter.field} ${filter.operator} ${filter.value}`
  })) || []

  return (
    <Card className="py-0">
      <CardContent className="p-4">
        <CollectionDetailsSection
          defaultCollapsed={isCollapsed}
          onToggle={setIsCollapsed}
        >
          {/* Description */}
        {collection.description && (
          <div>
            <h4 className="text-sm font-medium text-muted-foreground mb-2">Description</h4>
            <p className="text-sm leading-relaxed mb-4">{collection.description}</p>
          </div>
        )}
        
          {/* Rules */}
          {filterChips.length > 0 && (
            <>
              {collection.description && <Separator />}
              <div className="space-y-4">
                <div className="flex items-center justify-between">
                  <span className="text-sm font-medium">Filter criteria</span>
                  <button className="text-sm text-blue-600 hover:text-blue-700 flex items-center gap-1">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" className="lucide lucide-pen w-3 h-3">
                      <path d="M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z"></path>
                    </svg>
                    Customize filters
                  </button>
                </div>
                <FilterChipsList filters={filterChips} />
                {collection.autoSync && (
                  <p className="text-xs text-muted-foreground mt-2 flex items-center gap-1">
                    <Sparkles className="h-3 w-3" />
                    Auto-sync enabled - collection updates automatically
                  </p>
                )}
              </div>
            </>
          )}
        
          {/* AI Insights */}
          {staticInsights.length > 0 && (
            <>
              {(collection.description || filterChips.length > 0) && <Separator />}
              <div>
                <div className="flex items-center justify-between mb-4 mt-4">
                  <h4 className="text-sm font-medium text-muted-foreground flex items-center gap-2">
                    <Sparkles className="h-4 w-4" />
                    AI Insights
                  </h4>
                  <div className="flex items-center gap-2">
                    <Badge variant="secondary" className="text-xs px-2 py-0.5">
                      {staticInsights.length} insight{staticInsights.length > 1 ? 's' : ''}
                    </Badge>
                    <Button 
                      variant="default" 
                      size="sm" 
                      className="h-7 px-3 text-sm bg-blue-600 hover:bg-blue-700 text-white"
                      onClick={onOpenAIAssistant}
                    >
                      <Bot className="h-4 w-4 mr-1" />
                      AI Fojo
                    </Button>
                  </div>
                </div>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-3">
                  {staticInsights.map((insight) => (
                    <InsightCard
                      key={insight.id}
                      insight={insight}
                      onClick={() => {
                        if (onInsightClick && insight.aiDetails) {
                          onInsightClick(insight.id, insight.aiDetails)
                        } else if (onOpenAIAssistant) {
                          onOpenAIAssistant()
                        }
                      }}
                    />
                  ))}
                </div>
              </div>
            </>
          )}
        </CollectionDetailsSection>
      </CardContent>
    </Card>
  )
}
